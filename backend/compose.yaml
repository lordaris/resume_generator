services:
  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: resume_generator
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: resume_generator_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env

  migrations:
    build: .
    command: sh -c 'goose -dir ./migrations postgres "$$DB_URL" up'
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    # prevent container persistence
    restart: "no"
    networks:
      - default
    volumes:
      - ./migrations:/app/migrations

volumes:
  postgres_data:
  redis_data:
