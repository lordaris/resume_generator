# Build stage
FROM node:18-alpine AS builder
WORKDIR /app
COPY package.json .
# Handle cases where yarn.lock might not exist
RUN if [ -f yarn.lock ]; then yarn install --frozen-lockfile; \
    else yarn install; fi

COPY . .
RUN yarn build

# Production stage
FROM nginx:alpine
COPY --from=builder /app/dist /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
